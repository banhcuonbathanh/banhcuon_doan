// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package orm

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Accounts", testAccounts)
	t.Run("Branches", testBranches)
	t.Run("Deliveries", testDeliveries)
	t.Run("DeliveryDishes", testDeliveryDishes)
	t.Run("DishPriceHistories", testDishPriceHistories)
	t.Run("Dishes", testDishes)
	t.Run("Guests", testGuests)
	t.Run("OrderDishes", testOrderDishes)
	t.Run("OrderSets", testOrderSets)
	t.Run("Orders", testOrders)
	t.Run("Regulations", testRegulations)
	t.Run("SetDishes", testSetDishes)
	t.Run("Sets", testSets)
	t.Run("Tables", testTables)
}

func TestDelete(t *testing.T) {
	t.Run("Accounts", testAccountsDelete)
	t.Run("Branches", testBranchesDelete)
	t.Run("Deliveries", testDeliveriesDelete)
	t.Run("DeliveryDishes", testDeliveryDishesDelete)
	t.Run("DishPriceHistories", testDishPriceHistoriesDelete)
	t.Run("Dishes", testDishesDelete)
	t.Run("Guests", testGuestsDelete)
	t.Run("OrderDishes", testOrderDishesDelete)
	t.Run("OrderSets", testOrderSetsDelete)
	t.Run("Orders", testOrdersDelete)
	t.Run("Regulations", testRegulationsDelete)
	t.Run("SetDishes", testSetDishesDelete)
	t.Run("Sets", testSetsDelete)
	t.Run("Tables", testTablesDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Accounts", testAccountsQueryDeleteAll)
	t.Run("Branches", testBranchesQueryDeleteAll)
	t.Run("Deliveries", testDeliveriesQueryDeleteAll)
	t.Run("DeliveryDishes", testDeliveryDishesQueryDeleteAll)
	t.Run("DishPriceHistories", testDishPriceHistoriesQueryDeleteAll)
	t.Run("Dishes", testDishesQueryDeleteAll)
	t.Run("Guests", testGuestsQueryDeleteAll)
	t.Run("OrderDishes", testOrderDishesQueryDeleteAll)
	t.Run("OrderSets", testOrderSetsQueryDeleteAll)
	t.Run("Orders", testOrdersQueryDeleteAll)
	t.Run("Regulations", testRegulationsQueryDeleteAll)
	t.Run("SetDishes", testSetDishesQueryDeleteAll)
	t.Run("Sets", testSetsQueryDeleteAll)
	t.Run("Tables", testTablesQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Accounts", testAccountsSliceDeleteAll)
	t.Run("Branches", testBranchesSliceDeleteAll)
	t.Run("Deliveries", testDeliveriesSliceDeleteAll)
	t.Run("DeliveryDishes", testDeliveryDishesSliceDeleteAll)
	t.Run("DishPriceHistories", testDishPriceHistoriesSliceDeleteAll)
	t.Run("Dishes", testDishesSliceDeleteAll)
	t.Run("Guests", testGuestsSliceDeleteAll)
	t.Run("OrderDishes", testOrderDishesSliceDeleteAll)
	t.Run("OrderSets", testOrderSetsSliceDeleteAll)
	t.Run("Orders", testOrdersSliceDeleteAll)
	t.Run("Regulations", testRegulationsSliceDeleteAll)
	t.Run("SetDishes", testSetDishesSliceDeleteAll)
	t.Run("Sets", testSetsSliceDeleteAll)
	t.Run("Tables", testTablesSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Accounts", testAccountsExists)
	t.Run("Branches", testBranchesExists)
	t.Run("Deliveries", testDeliveriesExists)
	t.Run("DeliveryDishes", testDeliveryDishesExists)
	t.Run("DishPriceHistories", testDishPriceHistoriesExists)
	t.Run("Dishes", testDishesExists)
	t.Run("Guests", testGuestsExists)
	t.Run("OrderDishes", testOrderDishesExists)
	t.Run("OrderSets", testOrderSetsExists)
	t.Run("Orders", testOrdersExists)
	t.Run("Regulations", testRegulationsExists)
	t.Run("SetDishes", testSetDishesExists)
	t.Run("Sets", testSetsExists)
	t.Run("Tables", testTablesExists)
}

func TestFind(t *testing.T) {
	t.Run("Accounts", testAccountsFind)
	t.Run("Branches", testBranchesFind)
	t.Run("Deliveries", testDeliveriesFind)
	t.Run("DeliveryDishes", testDeliveryDishesFind)
	t.Run("DishPriceHistories", testDishPriceHistoriesFind)
	t.Run("Dishes", testDishesFind)
	t.Run("Guests", testGuestsFind)
	t.Run("OrderDishes", testOrderDishesFind)
	t.Run("OrderSets", testOrderSetsFind)
	t.Run("Orders", testOrdersFind)
	t.Run("Regulations", testRegulationsFind)
	t.Run("SetDishes", testSetDishesFind)
	t.Run("Sets", testSetsFind)
	t.Run("Tables", testTablesFind)
}

func TestBind(t *testing.T) {
	t.Run("Accounts", testAccountsBind)
	t.Run("Branches", testBranchesBind)
	t.Run("Deliveries", testDeliveriesBind)
	t.Run("DeliveryDishes", testDeliveryDishesBind)
	t.Run("DishPriceHistories", testDishPriceHistoriesBind)
	t.Run("Dishes", testDishesBind)
	t.Run("Guests", testGuestsBind)
	t.Run("OrderDishes", testOrderDishesBind)
	t.Run("OrderSets", testOrderSetsBind)
	t.Run("Orders", testOrdersBind)
	t.Run("Regulations", testRegulationsBind)
	t.Run("SetDishes", testSetDishesBind)
	t.Run("Sets", testSetsBind)
	t.Run("Tables", testTablesBind)
}

func TestOne(t *testing.T) {
	t.Run("Accounts", testAccountsOne)
	t.Run("Branches", testBranchesOne)
	t.Run("Deliveries", testDeliveriesOne)
	t.Run("DeliveryDishes", testDeliveryDishesOne)
	t.Run("DishPriceHistories", testDishPriceHistoriesOne)
	t.Run("Dishes", testDishesOne)
	t.Run("Guests", testGuestsOne)
	t.Run("OrderDishes", testOrderDishesOne)
	t.Run("OrderSets", testOrderSetsOne)
	t.Run("Orders", testOrdersOne)
	t.Run("Regulations", testRegulationsOne)
	t.Run("SetDishes", testSetDishesOne)
	t.Run("Sets", testSetsOne)
	t.Run("Tables", testTablesOne)
}

func TestAll(t *testing.T) {
	t.Run("Accounts", testAccountsAll)
	t.Run("Branches", testBranchesAll)
	t.Run("Deliveries", testDeliveriesAll)
	t.Run("DeliveryDishes", testDeliveryDishesAll)
	t.Run("DishPriceHistories", testDishPriceHistoriesAll)
	t.Run("Dishes", testDishesAll)
	t.Run("Guests", testGuestsAll)
	t.Run("OrderDishes", testOrderDishesAll)
	t.Run("OrderSets", testOrderSetsAll)
	t.Run("Orders", testOrdersAll)
	t.Run("Regulations", testRegulationsAll)
	t.Run("SetDishes", testSetDishesAll)
	t.Run("Sets", testSetsAll)
	t.Run("Tables", testTablesAll)
}

func TestCount(t *testing.T) {
	t.Run("Accounts", testAccountsCount)
	t.Run("Branches", testBranchesCount)
	t.Run("Deliveries", testDeliveriesCount)
	t.Run("DeliveryDishes", testDeliveryDishesCount)
	t.Run("DishPriceHistories", testDishPriceHistoriesCount)
	t.Run("Dishes", testDishesCount)
	t.Run("Guests", testGuestsCount)
	t.Run("OrderDishes", testOrderDishesCount)
	t.Run("OrderSets", testOrderSetsCount)
	t.Run("Orders", testOrdersCount)
	t.Run("Regulations", testRegulationsCount)
	t.Run("SetDishes", testSetDishesCount)
	t.Run("Sets", testSetsCount)
	t.Run("Tables", testTablesCount)
}

func TestHooks(t *testing.T) {
	t.Run("Accounts", testAccountsHooks)
	t.Run("Branches", testBranchesHooks)
	t.Run("Deliveries", testDeliveriesHooks)
	t.Run("DeliveryDishes", testDeliveryDishesHooks)
	t.Run("DishPriceHistories", testDishPriceHistoriesHooks)
	t.Run("Dishes", testDishesHooks)
	t.Run("Guests", testGuestsHooks)
	t.Run("OrderDishes", testOrderDishesHooks)
	t.Run("OrderSets", testOrderSetsHooks)
	t.Run("Orders", testOrdersHooks)
	t.Run("Regulations", testRegulationsHooks)
	t.Run("SetDishes", testSetDishesHooks)
	t.Run("Sets", testSetsHooks)
	t.Run("Tables", testTablesHooks)
}

func TestInsert(t *testing.T) {
	t.Run("Accounts", testAccountsInsert)
	t.Run("Accounts", testAccountsInsertWhitelist)
	t.Run("Branches", testBranchesInsert)
	t.Run("Branches", testBranchesInsertWhitelist)
	t.Run("Deliveries", testDeliveriesInsert)
	t.Run("Deliveries", testDeliveriesInsertWhitelist)
	t.Run("DeliveryDishes", testDeliveryDishesInsert)
	t.Run("DeliveryDishes", testDeliveryDishesInsertWhitelist)
	t.Run("DishPriceHistories", testDishPriceHistoriesInsert)
	t.Run("DishPriceHistories", testDishPriceHistoriesInsertWhitelist)
	t.Run("Dishes", testDishesInsert)
	t.Run("Dishes", testDishesInsertWhitelist)
	t.Run("Guests", testGuestsInsert)
	t.Run("Guests", testGuestsInsertWhitelist)
	t.Run("OrderDishes", testOrderDishesInsert)
	t.Run("OrderDishes", testOrderDishesInsertWhitelist)
	t.Run("OrderSets", testOrderSetsInsert)
	t.Run("OrderSets", testOrderSetsInsertWhitelist)
	t.Run("Orders", testOrdersInsert)
	t.Run("Orders", testOrdersInsertWhitelist)
	t.Run("Regulations", testRegulationsInsert)
	t.Run("Regulations", testRegulationsInsertWhitelist)
	t.Run("SetDishes", testSetDishesInsert)
	t.Run("SetDishes", testSetDishesInsertWhitelist)
	t.Run("Sets", testSetsInsert)
	t.Run("Sets", testSetsInsertWhitelist)
	t.Run("Tables", testTablesInsert)
	t.Run("Tables", testTablesInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("Accounts", testAccountsReload)
	t.Run("Branches", testBranchesReload)
	t.Run("Deliveries", testDeliveriesReload)
	t.Run("DeliveryDishes", testDeliveryDishesReload)
	t.Run("DishPriceHistories", testDishPriceHistoriesReload)
	t.Run("Dishes", testDishesReload)
	t.Run("Guests", testGuestsReload)
	t.Run("OrderDishes", testOrderDishesReload)
	t.Run("OrderSets", testOrderSetsReload)
	t.Run("Orders", testOrdersReload)
	t.Run("Regulations", testRegulationsReload)
	t.Run("SetDishes", testSetDishesReload)
	t.Run("Sets", testSetsReload)
	t.Run("Tables", testTablesReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Accounts", testAccountsReloadAll)
	t.Run("Branches", testBranchesReloadAll)
	t.Run("Deliveries", testDeliveriesReloadAll)
	t.Run("DeliveryDishes", testDeliveryDishesReloadAll)
	t.Run("DishPriceHistories", testDishPriceHistoriesReloadAll)
	t.Run("Dishes", testDishesReloadAll)
	t.Run("Guests", testGuestsReloadAll)
	t.Run("OrderDishes", testOrderDishesReloadAll)
	t.Run("OrderSets", testOrderSetsReloadAll)
	t.Run("Orders", testOrdersReloadAll)
	t.Run("Regulations", testRegulationsReloadAll)
	t.Run("SetDishes", testSetDishesReloadAll)
	t.Run("Sets", testSetsReloadAll)
	t.Run("Tables", testTablesReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Accounts", testAccountsSelect)
	t.Run("Branches", testBranchesSelect)
	t.Run("Deliveries", testDeliveriesSelect)
	t.Run("DeliveryDishes", testDeliveryDishesSelect)
	t.Run("DishPriceHistories", testDishPriceHistoriesSelect)
	t.Run("Dishes", testDishesSelect)
	t.Run("Guests", testGuestsSelect)
	t.Run("OrderDishes", testOrderDishesSelect)
	t.Run("OrderSets", testOrderSetsSelect)
	t.Run("Orders", testOrdersSelect)
	t.Run("Regulations", testRegulationsSelect)
	t.Run("SetDishes", testSetDishesSelect)
	t.Run("Sets", testSetsSelect)
	t.Run("Tables", testTablesSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Accounts", testAccountsUpdate)
	t.Run("Branches", testBranchesUpdate)
	t.Run("Deliveries", testDeliveriesUpdate)
	t.Run("DeliveryDishes", testDeliveryDishesUpdate)
	t.Run("DishPriceHistories", testDishPriceHistoriesUpdate)
	t.Run("Dishes", testDishesUpdate)
	t.Run("Guests", testGuestsUpdate)
	t.Run("OrderDishes", testOrderDishesUpdate)
	t.Run("OrderSets", testOrderSetsUpdate)
	t.Run("Orders", testOrdersUpdate)
	t.Run("Regulations", testRegulationsUpdate)
	t.Run("SetDishes", testSetDishesUpdate)
	t.Run("Sets", testSetsUpdate)
	t.Run("Tables", testTablesUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Accounts", testAccountsSliceUpdateAll)
	t.Run("Branches", testBranchesSliceUpdateAll)
	t.Run("Deliveries", testDeliveriesSliceUpdateAll)
	t.Run("DeliveryDishes", testDeliveryDishesSliceUpdateAll)
	t.Run("DishPriceHistories", testDishPriceHistoriesSliceUpdateAll)
	t.Run("Dishes", testDishesSliceUpdateAll)
	t.Run("Guests", testGuestsSliceUpdateAll)
	t.Run("OrderDishes", testOrderDishesSliceUpdateAll)
	t.Run("OrderSets", testOrderSetsSliceUpdateAll)
	t.Run("Orders", testOrdersSliceUpdateAll)
	t.Run("Regulations", testRegulationsSliceUpdateAll)
	t.Run("SetDishes", testSetDishesSliceUpdateAll)
	t.Run("Sets", testSetsSliceUpdateAll)
	t.Run("Tables", testTablesSliceUpdateAll)
}
