// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: quanqr/proto_qr/delivery/delivery.proto

package delivery

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Delivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId               int64                  `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	UserId                int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsGuest               bool                   `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	TableNumber           int64                  `protobuf:"varint,5,opt,name=table_number,json=tableNumber,proto3" json:"table_number,omitempty"`
	OrderHandlerId        int64                  `protobuf:"varint,6,opt,name=order_handler_id,json=orderHandlerId,proto3" json:"order_handler_id,omitempty"`
	Status                string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TotalPrice            int32                  `protobuf:"varint,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DishItems             []*DishDeliveryItem    `protobuf:"bytes,11,rep,name=dish_items,json=dishItems,proto3" json:"dish_items,omitempty"`
	OrderId               int64                  `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BowChili              int64                  `protobuf:"varint,13,opt,name=bow_chili,json=bowChili,proto3" json:"bow_chili,omitempty"`
	BowNoChili            int64                  `protobuf:"varint,14,opt,name=bow_no_chili,json=bowNoChili,proto3" json:"bow_no_chili,omitempty"`
	TakeAway              bool                   `protobuf:"varint,15,opt,name=take_away,json=takeAway,proto3" json:"take_away,omitempty"`
	ChiliNumber           int64                  `protobuf:"varint,16,opt,name=chili_number,json=chiliNumber,proto3" json:"chili_number,omitempty"`
	TableToken            string                 `protobuf:"bytes,17,opt,name=table_token,json=tableToken,proto3" json:"table_token,omitempty"`
	ClientName            string                 `protobuf:"bytes,18,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	DeliveryAddress       string                 `protobuf:"bytes,19,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`                     // New field
	DeliveryContact       string                 `protobuf:"bytes,20,opt,name=delivery_contact,json=deliveryContact,proto3" json:"delivery_contact,omitempty"`                     // New field
	DeliveryNotes         string                 `protobuf:"bytes,21,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"`                           // New field
	ScheduledTime         *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`                           // New field
	DeliveryFee           int32                  `protobuf:"varint,23,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`                                // New field
	DeliveryStatus        string                 `protobuf:"bytes,25,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`                        // New field
	EstimatedDeliveryTime *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"` // New field
	ActualDeliveryTime    *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`          // New field
}

func (x *Delivery) Reset() {
	*x = Delivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delivery) ProtoMessage() {}

func (x *Delivery) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delivery.ProtoReflect.Descriptor instead.
func (*Delivery) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{0}
}

func (x *Delivery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Delivery) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *Delivery) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Delivery) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *Delivery) GetTableNumber() int64 {
	if x != nil {
		return x.TableNumber
	}
	return 0
}

func (x *Delivery) GetOrderHandlerId() int64 {
	if x != nil {
		return x.OrderHandlerId
	}
	return 0
}

func (x *Delivery) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Delivery) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Delivery) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Delivery) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Delivery) GetDishItems() []*DishDeliveryItem {
	if x != nil {
		return x.DishItems
	}
	return nil
}

func (x *Delivery) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Delivery) GetBowChili() int64 {
	if x != nil {
		return x.BowChili
	}
	return 0
}

func (x *Delivery) GetBowNoChili() int64 {
	if x != nil {
		return x.BowNoChili
	}
	return 0
}

func (x *Delivery) GetTakeAway() bool {
	if x != nil {
		return x.TakeAway
	}
	return false
}

func (x *Delivery) GetChiliNumber() int64 {
	if x != nil {
		return x.ChiliNumber
	}
	return 0
}

func (x *Delivery) GetTableToken() string {
	if x != nil {
		return x.TableToken
	}
	return ""
}

func (x *Delivery) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *Delivery) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *Delivery) GetDeliveryContact() string {
	if x != nil {
		return x.DeliveryContact
	}
	return ""
}

func (x *Delivery) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

func (x *Delivery) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *Delivery) GetDeliveryFee() int32 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *Delivery) GetDeliveryStatus() string {
	if x != nil {
		return x.DeliveryStatus
	}
	return ""
}

func (x *Delivery) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *Delivery) GetActualDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

type CreateDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId               int64                  `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	UserId                int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsGuest               bool                   `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	TableNumber           int64                  `protobuf:"varint,5,opt,name=table_number,json=tableNumber,proto3" json:"table_number,omitempty"`
	OrderHandlerId        int64                  `protobuf:"varint,6,opt,name=order_handler_id,json=orderHandlerId,proto3" json:"order_handler_id,omitempty"`
	Status                string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TotalPrice            int32                  `protobuf:"varint,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DishItems             []*DishDeliveryItem    `protobuf:"bytes,11,rep,name=dish_items,json=dishItems,proto3" json:"dish_items,omitempty"`
	OrderId               int64                  `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BowChili              int64                  `protobuf:"varint,13,opt,name=bow_chili,json=bowChili,proto3" json:"bow_chili,omitempty"`
	BowNoChili            int64                  `protobuf:"varint,14,opt,name=bow_no_chili,json=bowNoChili,proto3" json:"bow_no_chili,omitempty"`
	TakeAway              bool                   `protobuf:"varint,15,opt,name=take_away,json=takeAway,proto3" json:"take_away,omitempty"`
	ChiliNumber           int64                  `protobuf:"varint,16,opt,name=chili_number,json=chiliNumber,proto3" json:"chili_number,omitempty"`
	TableToken            string                 `protobuf:"bytes,17,opt,name=table_token,json=tableToken,proto3" json:"table_token,omitempty"`
	ClientName            string                 `protobuf:"bytes,18,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	DeliveryAddress       string                 `protobuf:"bytes,19,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`                     // New field
	DeliveryContact       string                 `protobuf:"bytes,20,opt,name=delivery_contact,json=deliveryContact,proto3" json:"delivery_contact,omitempty"`                     // New field
	DeliveryNotes         string                 `protobuf:"bytes,21,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"`                           // New field
	ScheduledTime         *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`                           // New field
	DeliveryFee           int32                  `protobuf:"varint,23,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`                                // New field
	DeliveryStatus        string                 `protobuf:"bytes,25,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`                        // New field
	EstimatedDeliveryTime *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"` // New field
	ActualDeliveryTime    *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`          // New field
}

func (x *CreateDeliverRequest) Reset() {
	*x = CreateDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeliverRequest) ProtoMessage() {}

func (x *CreateDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeliverRequest.ProtoReflect.Descriptor instead.
func (*CreateDeliverRequest) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDeliverRequest) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *CreateDeliverRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateDeliverRequest) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *CreateDeliverRequest) GetTableNumber() int64 {
	if x != nil {
		return x.TableNumber
	}
	return 0
}

func (x *CreateDeliverRequest) GetOrderHandlerId() int64 {
	if x != nil {
		return x.OrderHandlerId
	}
	return 0
}

func (x *CreateDeliverRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateDeliverRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateDeliverRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CreateDeliverRequest) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *CreateDeliverRequest) GetDishItems() []*DishDeliveryItem {
	if x != nil {
		return x.DishItems
	}
	return nil
}

func (x *CreateDeliverRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CreateDeliverRequest) GetBowChili() int64 {
	if x != nil {
		return x.BowChili
	}
	return 0
}

func (x *CreateDeliverRequest) GetBowNoChili() int64 {
	if x != nil {
		return x.BowNoChili
	}
	return 0
}

func (x *CreateDeliverRequest) GetTakeAway() bool {
	if x != nil {
		return x.TakeAway
	}
	return false
}

func (x *CreateDeliverRequest) GetChiliNumber() int64 {
	if x != nil {
		return x.ChiliNumber
	}
	return 0
}

func (x *CreateDeliverRequest) GetTableToken() string {
	if x != nil {
		return x.TableToken
	}
	return ""
}

func (x *CreateDeliverRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *CreateDeliverRequest) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *CreateDeliverRequest) GetDeliveryContact() string {
	if x != nil {
		return x.DeliveryContact
	}
	return ""
}

func (x *CreateDeliverRequest) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

func (x *CreateDeliverRequest) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *CreateDeliverRequest) GetDeliveryFee() int32 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *CreateDeliverRequest) GetDeliveryStatus() string {
	if x != nil {
		return x.DeliveryStatus
	}
	return ""
}

func (x *CreateDeliverRequest) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *CreateDeliverRequest) GetActualDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

type UpdateDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId               int64                  `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	UserId                int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsGuest               bool                   `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	TableNumber           int64                  `protobuf:"varint,5,opt,name=table_number,json=tableNumber,proto3" json:"table_number,omitempty"`
	OrderHandlerId        int64                  `protobuf:"varint,6,opt,name=order_handler_id,json=orderHandlerId,proto3" json:"order_handler_id,omitempty"`
	Status                string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TotalPrice            int32                  `protobuf:"varint,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DishItems             []*DishDeliveryItem    `protobuf:"bytes,11,rep,name=dish_items,json=dishItems,proto3" json:"dish_items,omitempty"`
	OrderId               int64                  `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BowChili              int64                  `protobuf:"varint,13,opt,name=bow_chili,json=bowChili,proto3" json:"bow_chili,omitempty"`
	BowNoChili            int64                  `protobuf:"varint,14,opt,name=bow_no_chili,json=bowNoChili,proto3" json:"bow_no_chili,omitempty"`
	TakeAway              bool                   `protobuf:"varint,15,opt,name=take_away,json=takeAway,proto3" json:"take_away,omitempty"`
	ChiliNumber           int64                  `protobuf:"varint,16,opt,name=chili_number,json=chiliNumber,proto3" json:"chili_number,omitempty"`
	TableToken            string                 `protobuf:"bytes,17,opt,name=table_token,json=tableToken,proto3" json:"table_token,omitempty"`
	ClientName            string                 `protobuf:"bytes,18,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	DeliveryAddress       string                 `protobuf:"bytes,19,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`                     // New field
	DeliveryContact       string                 `protobuf:"bytes,20,opt,name=delivery_contact,json=deliveryContact,proto3" json:"delivery_contact,omitempty"`                     // New field
	DeliveryNotes         string                 `protobuf:"bytes,21,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"`                           // New field
	ScheduledTime         *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`                           // New field
	DeliveryFee           int32                  `protobuf:"varint,23,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`                                // New field
	DeliveryStatus        string                 `protobuf:"bytes,25,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`                        // New field
	EstimatedDeliveryTime *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"` // New field
	ActualDeliveryTime    *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`          // New field
}

func (x *UpdateDeliverRequest) Reset() {
	*x = UpdateDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeliverRequest) ProtoMessage() {}

func (x *UpdateDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeliverRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeliverRequest) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDeliverRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeliverRequest) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *UpdateDeliverRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateDeliverRequest) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *UpdateDeliverRequest) GetTableNumber() int64 {
	if x != nil {
		return x.TableNumber
	}
	return 0
}

func (x *UpdateDeliverRequest) GetOrderHandlerId() int64 {
	if x != nil {
		return x.OrderHandlerId
	}
	return 0
}

func (x *UpdateDeliverRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateDeliverRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UpdateDeliverRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpdateDeliverRequest) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *UpdateDeliverRequest) GetDishItems() []*DishDeliveryItem {
	if x != nil {
		return x.DishItems
	}
	return nil
}

func (x *UpdateDeliverRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateDeliverRequest) GetBowChili() int64 {
	if x != nil {
		return x.BowChili
	}
	return 0
}

func (x *UpdateDeliverRequest) GetBowNoChili() int64 {
	if x != nil {
		return x.BowNoChili
	}
	return 0
}

func (x *UpdateDeliverRequest) GetTakeAway() bool {
	if x != nil {
		return x.TakeAway
	}
	return false
}

func (x *UpdateDeliverRequest) GetChiliNumber() int64 {
	if x != nil {
		return x.ChiliNumber
	}
	return 0
}

func (x *UpdateDeliverRequest) GetTableToken() string {
	if x != nil {
		return x.TableToken
	}
	return ""
}

func (x *UpdateDeliverRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *UpdateDeliverRequest) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *UpdateDeliverRequest) GetDeliveryContact() string {
	if x != nil {
		return x.DeliveryContact
	}
	return ""
}

func (x *UpdateDeliverRequest) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

func (x *UpdateDeliverRequest) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *UpdateDeliverRequest) GetDeliveryFee() int32 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *UpdateDeliverRequest) GetDeliveryStatus() string {
	if x != nil {
		return x.DeliveryStatus
	}
	return ""
}

func (x *UpdateDeliverRequest) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *UpdateDeliverRequest) GetActualDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

type DishDeliveryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	DishId   int64 `protobuf:"varint,3,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
}

func (x *DishDeliveryItem) Reset() {
	*x = DishDeliveryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishDeliveryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishDeliveryItem) ProtoMessage() {}

func (x *DishDeliveryItem) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishDeliveryItem.ProtoReflect.Descriptor instead.
func (*DishDeliveryItem) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{3}
}

func (x *DishDeliveryItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *DishDeliveryItem) GetDishId() int64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

type DeliveryDetailedDish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DishId      int64  `protobuf:"varint,1,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
	Quantity    int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Price       int32  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Status      string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeliveryDetailedDish) Reset() {
	*x = DeliveryDetailedDish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryDetailedDish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryDetailedDish) ProtoMessage() {}

func (x *DeliveryDetailedDish) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryDetailedDish.ProtoReflect.Descriptor instead.
func (*DeliveryDetailedDish) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{4}
}

func (x *DeliveryDetailedDish) GetDishId() int64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

func (x *DeliveryDetailedDish) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *DeliveryDetailedDish) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeliveryDetailedDish) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DeliveryDetailedDish) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DeliveryDetailedDish) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DeliveryDetailedDish) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeliveryDetailedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId               int64                   `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	UserId                int64                   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsGuest               bool                    `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	TableNumber           int64                   `protobuf:"varint,5,opt,name=table_number,json=tableNumber,proto3" json:"table_number,omitempty"`
	OrderHandlerId        int64                   `protobuf:"varint,6,opt,name=order_handler_id,json=orderHandlerId,proto3" json:"order_handler_id,omitempty"`
	Status                string                  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TotalPrice            int32                   `protobuf:"varint,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DishItems             []*DeliveryDetailedDish `protobuf:"bytes,11,rep,name=dish_items,json=dishItems,proto3" json:"dish_items,omitempty"`
	OrderId               int64                   `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BowChili              int64                   `protobuf:"varint,13,opt,name=bow_chili,json=bowChili,proto3" json:"bow_chili,omitempty"`
	BowNoChili            int64                   `protobuf:"varint,14,opt,name=bow_no_chili,json=bowNoChili,proto3" json:"bow_no_chili,omitempty"`
	TakeAway              bool                    `protobuf:"varint,15,opt,name=take_away,json=takeAway,proto3" json:"take_away,omitempty"`
	ChiliNumber           int64                   `protobuf:"varint,16,opt,name=chili_number,json=chiliNumber,proto3" json:"chili_number,omitempty"`
	TableToken            string                  `protobuf:"bytes,17,opt,name=table_token,json=tableToken,proto3" json:"table_token,omitempty"`
	ClientName            string                  `protobuf:"bytes,18,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	DeliveryAddress       string                  `protobuf:"bytes,19,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`                     // New field
	DeliveryContact       string                  `protobuf:"bytes,20,opt,name=delivery_contact,json=deliveryContact,proto3" json:"delivery_contact,omitempty"`                     // New field
	DeliveryNotes         string                  `protobuf:"bytes,21,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"`                           // New field
	ScheduledTime         *timestamppb.Timestamp  `protobuf:"bytes,22,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`                           // New field
	DeliveryFee           int32                   `protobuf:"varint,23,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`                                // New field
	DeliveryStatus        string                  `protobuf:"bytes,25,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`                        // New field
	EstimatedDeliveryTime *timestamppb.Timestamp  `protobuf:"bytes,26,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"` // New field
	ActualDeliveryTime    *timestamppb.Timestamp  `protobuf:"bytes,27,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`          // New field
}

func (x *DeliveryDetailedResponse) Reset() {
	*x = DeliveryDetailedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryDetailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryDetailedResponse) ProtoMessage() {}

func (x *DeliveryDetailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryDetailedResponse.ProtoReflect.Descriptor instead.
func (*DeliveryDetailedResponse) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{5}
}

func (x *DeliveryDetailedResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *DeliveryDetailedResponse) GetTableNumber() int64 {
	if x != nil {
		return x.TableNumber
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetOrderHandlerId() int64 {
	if x != nil {
		return x.OrderHandlerId
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeliveryDetailedResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DeliveryDetailedResponse) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetDishItems() []*DeliveryDetailedDish {
	if x != nil {
		return x.DishItems
	}
	return nil
}

func (x *DeliveryDetailedResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetBowChili() int64 {
	if x != nil {
		return x.BowChili
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetBowNoChili() int64 {
	if x != nil {
		return x.BowNoChili
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetTakeAway() bool {
	if x != nil {
		return x.TakeAway
	}
	return false
}

func (x *DeliveryDetailedResponse) GetChiliNumber() int64 {
	if x != nil {
		return x.ChiliNumber
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetTableToken() string {
	if x != nil {
		return x.TableToken
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetDeliveryContact() string {
	if x != nil {
		return x.DeliveryContact
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *DeliveryDetailedResponse) GetDeliveryFee() int32 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *DeliveryDetailedResponse) GetDeliveryStatus() string {
	if x != nil {
		return x.DeliveryStatus
	}
	return ""
}

func (x *DeliveryDetailedResponse) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *DeliveryDetailedResponse) GetActualDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

type DeliveryDetailedListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*DeliveryDetailedResponse `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationInfo             `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *DeliveryDetailedListResponse) Reset() {
	*x = DeliveryDetailedListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryDetailedListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryDetailedListResponse) ProtoMessage() {}

func (x *DeliveryDetailedListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryDetailedListResponse.ProtoReflect.Descriptor instead.
func (*DeliveryDetailedListResponse) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{6}
}

func (x *DeliveryDetailedListResponse) GetData() []*DeliveryDetailedResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeliveryDetailedListResponse) GetPagination() *PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PaginationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage int32 `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	TotalPages  int32 `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalItems  int64 `protobuf:"varint,3,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	PageSize    int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PaginationInfo) Reset() {
	*x = PaginationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationInfo) ProtoMessage() {}

func (x *PaginationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationInfo.ProtoReflect.Descriptor instead.
func (*PaginationInfo) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{7}
}

func (x *PaginationInfo) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginationInfo) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginationInfo) GetTotalItems() int64 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *PaginationInfo) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DeliverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId               int64                  `protobuf:"varint,2,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	UserId                int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsGuest               bool                   `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
	TableNumber           int64                  `protobuf:"varint,5,opt,name=table_number,json=tableNumber,proto3" json:"table_number,omitempty"`
	OrderHandlerId        int64                  `protobuf:"varint,6,opt,name=order_handler_id,json=orderHandlerId,proto3" json:"order_handler_id,omitempty"`
	Status                string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TotalPrice            int32                  `protobuf:"varint,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DishItems             []*DishDeliveryItem    `protobuf:"bytes,11,rep,name=dish_items,json=dishItems,proto3" json:"dish_items,omitempty"`
	OrderId               int64                  `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BowChili              int64                  `protobuf:"varint,13,opt,name=bow_chili,json=bowChili,proto3" json:"bow_chili,omitempty"`
	BowNoChili            int64                  `protobuf:"varint,14,opt,name=bow_no_chili,json=bowNoChili,proto3" json:"bow_no_chili,omitempty"`
	TakeAway              bool                   `protobuf:"varint,15,opt,name=take_away,json=takeAway,proto3" json:"take_away,omitempty"`
	ChiliNumber           int64                  `protobuf:"varint,16,opt,name=chili_number,json=chiliNumber,proto3" json:"chili_number,omitempty"`
	TableToken            string                 `protobuf:"bytes,17,opt,name=table_token,json=tableToken,proto3" json:"table_token,omitempty"`
	ClientName            string                 `protobuf:"bytes,18,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	DeliveryAddress       string                 `protobuf:"bytes,19,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`                     // New field
	DeliveryContact       string                 `protobuf:"bytes,20,opt,name=delivery_contact,json=deliveryContact,proto3" json:"delivery_contact,omitempty"`                     // New field
	DeliveryNotes         string                 `protobuf:"bytes,21,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"`                           // New field
	ScheduledTime         *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`                           // New field
	DeliveryFee           int32                  `protobuf:"varint,23,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`                                // New field
	DeliveryStatus        string                 `protobuf:"bytes,25,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`                        // New field
	EstimatedDeliveryTime *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"` // New field
	ActualDeliveryTime    *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`          // New field
}

func (x *DeliverResponse) Reset() {
	*x = DeliverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverResponse) ProtoMessage() {}

func (x *DeliverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverResponse.ProtoReflect.Descriptor instead.
func (*DeliverResponse) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{8}
}

func (x *DeliverResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliverResponse) GetGuestId() int64 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *DeliverResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeliverResponse) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

func (x *DeliverResponse) GetTableNumber() int64 {
	if x != nil {
		return x.TableNumber
	}
	return 0
}

func (x *DeliverResponse) GetOrderHandlerId() int64 {
	if x != nil {
		return x.OrderHandlerId
	}
	return 0
}

func (x *DeliverResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeliverResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeliverResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DeliverResponse) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *DeliverResponse) GetDishItems() []*DishDeliveryItem {
	if x != nil {
		return x.DishItems
	}
	return nil
}

func (x *DeliverResponse) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DeliverResponse) GetBowChili() int64 {
	if x != nil {
		return x.BowChili
	}
	return 0
}

func (x *DeliverResponse) GetBowNoChili() int64 {
	if x != nil {
		return x.BowNoChili
	}
	return 0
}

func (x *DeliverResponse) GetTakeAway() bool {
	if x != nil {
		return x.TakeAway
	}
	return false
}

func (x *DeliverResponse) GetChiliNumber() int64 {
	if x != nil {
		return x.ChiliNumber
	}
	return 0
}

func (x *DeliverResponse) GetTableToken() string {
	if x != nil {
		return x.TableToken
	}
	return ""
}

func (x *DeliverResponse) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *DeliverResponse) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *DeliverResponse) GetDeliveryContact() string {
	if x != nil {
		return x.DeliveryContact
	}
	return ""
}

func (x *DeliverResponse) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

func (x *DeliverResponse) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *DeliverResponse) GetDeliveryFee() int32 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *DeliverResponse) GetDeliveryStatus() string {
	if x != nil {
		return x.DeliveryStatus
	}
	return ""
}

func (x *DeliverResponse) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *DeliverResponse) GetActualDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

type DeliveryIdParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeliveryIdParam) Reset() {
	*x = DeliveryIdParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryIdParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryIdParam) ProtoMessage() {}

func (x *DeliveryIdParam) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryIdParam.ProtoReflect.Descriptor instead.
func (*DeliveryIdParam) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{9}
}

func (x *DeliveryIdParam) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeliveryClientNameParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeliveryClientNameParam) Reset() {
	*x = DeliveryClientNameParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryClientNameParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryClientNameParam) ProtoMessage() {}

func (x *DeliveryClientNameParam) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryClientNameParam.ProtoReflect.Descriptor instead.
func (*DeliveryClientNameParam) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{10}
}

func (x *DeliveryClientNameParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDeliveriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetDeliveriesRequest) Reset() {
	*x = GetDeliveriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeliveriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveriesRequest) ProtoMessage() {}

func (x *GetDeliveriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveriesRequest.ProtoReflect.Descriptor instead.
func (*GetDeliveriesRequest) Descriptor() ([]byte, []int) {
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP(), []int{11}
}

func (x *GetDeliveriesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetDeliveriesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_quanqr_proto_qr_delivery_delivery_proto protoreflect.FileDescriptor

var file_quanqr_proto_qr_delivery_delivery_proto_rawDesc = []byte{
	0x0a, 0x27, 0x71, 0x75, 0x61, 0x6e, 0x71, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x71,
	0x72, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x08, 0x0a, 0x08, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x68, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x62, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12, 0x20, 0x0a, 0x0c, 0x62,
	0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x62, 0x6f, 0x77, 0x4e, 0x6f, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x77, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x69, 0x6c, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x17, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4c, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xac, 0x08,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x68, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x62, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x6f,
	0x77, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x62, 0x6f, 0x77, 0x4e, 0x6f, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x77, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69,
	0x6c, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c,
	0x0a, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbc, 0x08, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x62, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x6f, 0x77,
	0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x62, 0x6f, 0x77, 0x4e, 0x6f, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x6b, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x74, 0x61, 0x6b, 0x65, 0x41, 0x77, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6c,
	0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x68, 0x69, 0x6c, 0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a,
	0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x44,
	0x69, 0x73, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69,
	0x73, 0x68, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x68, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc4, 0x08, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x68, 0x52, 0x09,
	0x64, 0x69, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x69, 0x6c,
	0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c,
	0x69, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x69, 0x6c,
	0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6f, 0x77, 0x4e, 0x6f, 0x43, 0x68,
	0x69, 0x6c, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x77, 0x61, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x12, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb7, 0x08, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x68,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x69,
	0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x12,
	0x20, 0x0a, 0x0c, 0x62, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6f, 0x77, 0x4e, 0x6f, 0x43, 0x68, 0x69, 0x6c,
	0x69, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x77, 0x61, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x52, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32, 0xe0, 0x04, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x24, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x76, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x2c, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1f,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42,
	0x2a, 0x5a, 0x28, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x2d, 0x61, 0x69, 0x2d, 0x66, 0x75,
	0x6c, 0x6c, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x71, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x71, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_quanqr_proto_qr_delivery_delivery_proto_rawDescOnce sync.Once
	file_quanqr_proto_qr_delivery_delivery_proto_rawDescData = file_quanqr_proto_qr_delivery_delivery_proto_rawDesc
)

func file_quanqr_proto_qr_delivery_delivery_proto_rawDescGZIP() []byte {
	file_quanqr_proto_qr_delivery_delivery_proto_rawDescOnce.Do(func() {
		file_quanqr_proto_qr_delivery_delivery_proto_rawDescData = protoimpl.X.CompressGZIP(file_quanqr_proto_qr_delivery_delivery_proto_rawDescData)
	})
	return file_quanqr_proto_qr_delivery_delivery_proto_rawDescData
}

var file_quanqr_proto_qr_delivery_delivery_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_quanqr_proto_qr_delivery_delivery_proto_goTypes = []any{
	(*Delivery)(nil),                     // 0: delivery_proto.Delivery
	(*CreateDeliverRequest)(nil),         // 1: delivery_proto.CreateDeliverRequest
	(*UpdateDeliverRequest)(nil),         // 2: delivery_proto.UpdateDeliverRequest
	(*DishDeliveryItem)(nil),             // 3: delivery_proto.DishDeliveryItem
	(*DeliveryDetailedDish)(nil),         // 4: delivery_proto.DeliveryDetailedDish
	(*DeliveryDetailedResponse)(nil),     // 5: delivery_proto.DeliveryDetailedResponse
	(*DeliveryDetailedListResponse)(nil), // 6: delivery_proto.DeliveryDetailedListResponse
	(*PaginationInfo)(nil),               // 7: delivery_proto.PaginationInfo
	(*DeliverResponse)(nil),              // 8: delivery_proto.DeliverResponse
	(*DeliveryIdParam)(nil),              // 9: delivery_proto.DeliveryIdParam
	(*DeliveryClientNameParam)(nil),      // 10: delivery_proto.DeliveryClientNameParam
	(*GetDeliveriesRequest)(nil),         // 11: delivery_proto.GetDeliveriesRequest
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
}
var file_quanqr_proto_qr_delivery_delivery_proto_depIdxs = []int32{
	12, // 0: delivery_proto.Delivery.created_at:type_name -> google.protobuf.Timestamp
	12, // 1: delivery_proto.Delivery.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 2: delivery_proto.Delivery.dish_items:type_name -> delivery_proto.DishDeliveryItem
	12, // 3: delivery_proto.Delivery.scheduled_time:type_name -> google.protobuf.Timestamp
	12, // 4: delivery_proto.Delivery.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 5: delivery_proto.Delivery.actual_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 6: delivery_proto.CreateDeliverRequest.created_at:type_name -> google.protobuf.Timestamp
	12, // 7: delivery_proto.CreateDeliverRequest.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 8: delivery_proto.CreateDeliverRequest.dish_items:type_name -> delivery_proto.DishDeliveryItem
	12, // 9: delivery_proto.CreateDeliverRequest.scheduled_time:type_name -> google.protobuf.Timestamp
	12, // 10: delivery_proto.CreateDeliverRequest.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 11: delivery_proto.CreateDeliverRequest.actual_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 12: delivery_proto.UpdateDeliverRequest.created_at:type_name -> google.protobuf.Timestamp
	12, // 13: delivery_proto.UpdateDeliverRequest.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 14: delivery_proto.UpdateDeliverRequest.dish_items:type_name -> delivery_proto.DishDeliveryItem
	12, // 15: delivery_proto.UpdateDeliverRequest.scheduled_time:type_name -> google.protobuf.Timestamp
	12, // 16: delivery_proto.UpdateDeliverRequest.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 17: delivery_proto.UpdateDeliverRequest.actual_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 18: delivery_proto.DeliveryDetailedResponse.created_at:type_name -> google.protobuf.Timestamp
	12, // 19: delivery_proto.DeliveryDetailedResponse.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 20: delivery_proto.DeliveryDetailedResponse.dish_items:type_name -> delivery_proto.DeliveryDetailedDish
	12, // 21: delivery_proto.DeliveryDetailedResponse.scheduled_time:type_name -> google.protobuf.Timestamp
	12, // 22: delivery_proto.DeliveryDetailedResponse.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 23: delivery_proto.DeliveryDetailedResponse.actual_delivery_time:type_name -> google.protobuf.Timestamp
	5,  // 24: delivery_proto.DeliveryDetailedListResponse.data:type_name -> delivery_proto.DeliveryDetailedResponse
	7,  // 25: delivery_proto.DeliveryDetailedListResponse.pagination:type_name -> delivery_proto.PaginationInfo
	12, // 26: delivery_proto.DeliverResponse.created_at:type_name -> google.protobuf.Timestamp
	12, // 27: delivery_proto.DeliverResponse.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 28: delivery_proto.DeliverResponse.dish_items:type_name -> delivery_proto.DishDeliveryItem
	12, // 29: delivery_proto.DeliverResponse.scheduled_time:type_name -> google.protobuf.Timestamp
	12, // 30: delivery_proto.DeliverResponse.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	12, // 31: delivery_proto.DeliverResponse.actual_delivery_time:type_name -> google.protobuf.Timestamp
	1,  // 32: delivery_proto.DeliveryService.CreateOrder:input_type -> delivery_proto.CreateDeliverRequest
	9,  // 33: delivery_proto.DeliveryService.GetDeliveryDetailById:input_type -> delivery_proto.DeliveryIdParam
	10, // 34: delivery_proto.DeliveryService.GetDeliveryDetailByClientName:input_type -> delivery_proto.DeliveryClientNameParam
	2,  // 35: delivery_proto.DeliveryService.UpdateDelivery:input_type -> delivery_proto.UpdateDeliverRequest
	11, // 36: delivery_proto.DeliveryService.GetDeliveriesListDetail:input_type -> delivery_proto.GetDeliveriesRequest
	9,  // 37: delivery_proto.DeliveryService.DeleteDeliveryDetailById:input_type -> delivery_proto.DeliveryIdParam
	8,  // 38: delivery_proto.DeliveryService.CreateOrder:output_type -> delivery_proto.DeliverResponse
	8,  // 39: delivery_proto.DeliveryService.GetDeliveryDetailById:output_type -> delivery_proto.DeliverResponse
	6,  // 40: delivery_proto.DeliveryService.GetDeliveryDetailByClientName:output_type -> delivery_proto.DeliveryDetailedListResponse
	8,  // 41: delivery_proto.DeliveryService.UpdateDelivery:output_type -> delivery_proto.DeliverResponse
	6,  // 42: delivery_proto.DeliveryService.GetDeliveriesListDetail:output_type -> delivery_proto.DeliveryDetailedListResponse
	9,  // 43: delivery_proto.DeliveryService.DeleteDeliveryDetailById:output_type -> delivery_proto.DeliveryIdParam
	38, // [38:44] is the sub-list for method output_type
	32, // [32:38] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_quanqr_proto_qr_delivery_delivery_proto_init() }
func file_quanqr_proto_qr_delivery_delivery_proto_init() {
	if File_quanqr_proto_qr_delivery_delivery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Delivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DishDeliveryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeliveryDetailedDish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeliveryDetailedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeliveryDetailedListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PaginationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeliverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeliveryIdParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeliveryClientNameParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quanqr_proto_qr_delivery_delivery_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeliveriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quanqr_proto_qr_delivery_delivery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quanqr_proto_qr_delivery_delivery_proto_goTypes,
		DependencyIndexes: file_quanqr_proto_qr_delivery_delivery_proto_depIdxs,
		MessageInfos:      file_quanqr_proto_qr_delivery_delivery_proto_msgTypes,
	}.Build()
	File_quanqr_proto_qr_delivery_delivery_proto = out.File
	file_quanqr_proto_qr_delivery_delivery_proto_rawDesc = nil
	file_quanqr_proto_qr_delivery_delivery_proto_goTypes = nil
	file_quanqr_proto_qr_delivery_delivery_proto_depIdxs = nil
}
